class Solution:

    # time O(n): we iterate over the string * inner loop of all chr types
    # space O(1): we only track per chr type

    def partitionLabels(self, s: str) -> List[int]:
        partitions = []

        # track count of all chrs
        c_counts = {}
        for c in s:
            c_counts[c] = c_counts.get(c, 0) + 1
        
        # track occurrences of the chrs
        c_occurs = {}
        partition_count = 0
        # iterate s
        for i in range(len(s)):
            partition_count += 1
            c = s[i]
            # c occurs
            c_occurs[c] = c_occurs.get(c, c_counts[c]) - 1
            # check if all occurences are 0
            is_all_zero = True
            for v in c_occurs.values():
                if v > 0:
                    is_all_zero = False
            # we found the partition
            if is_all_zero:
                partitions.append(partition_count)
                partition_count = 0
                c_occurs.clear()
        return partitions
        