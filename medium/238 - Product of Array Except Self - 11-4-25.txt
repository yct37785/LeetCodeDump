class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        '''
        cat: arr & hashmap
        runtime: O(n)
        space: O(n)
        solution:
        - answer[i] = product of all other num except nums[i]
        - traverse both ends and get respective culmulatives
        - nums[i] *= cul and cul *= nums[i]
        '''
        answer = [1] * len(nums)
        l = 0
        l_cul = 1
        r = len(nums) - 1
        r_cul = 1
        while r >= 0:
            # left culmulative
            answer[l] *= l_cul
            # right culmulative
            answer[r] *= r_cul
            # multiply culmulatives
            l_cul *= nums[l]
            r_cul *= nums[r]
            l += 1
            r -= 1
        return answer